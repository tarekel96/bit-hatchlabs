{"version":3,"sources":["components/Button/button.module.scss","components/Button/index.js","pages/buttons-light-mode.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Button","props","useState","clicked","setClick","className","styles","version","size","onClick","leftIcon","content","rightIcon","buttons","style","display","flexDirection","justifyContent","textAlign","marginTop","defaultProps","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.67609cb9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"danger\":\"button_danger__3S2j4\",\"small\":\"button_small__1fGIQ\",\"big\":\"button_big__jTPnX\",\"primary\":\"button_primary__3Ajav\",\"primary-clicked\":\"button_primary-clicked__UY60A\",\"primary-disabled\":\"button_primary-disabled__2Ve5l\",\"primary-disabled-clicked\":\"button_primary-disabled-clicked__ZhpD5\",\"secondary\":\"button_secondary__2PH98\",\"secondary-clicked\":\"button_secondary-clicked__1XqJn\",\"secondary-disabled\":\"button_secondary-disabled__1s114\",\"secondary-disabled-clicked\":\"button_secondary-disabled-clicked__1XRlS\",\"text\":\"button_text__18Poj\",\"text-clicked\":\"button_text-clicked__Ct1DX\",\"text-disabled\":\"button_text-disabled__2O3S0\",\"text-disabled-clicked\":\"button_text-disabled-clicked__H_HWc\",\"text-yellow\":\"button_text-yellow__27OGZ\",\"text-yellow-clicked\":\"button_text-yellow-clicked__202zH\",\"text-orange\":\"button_text-orange__3IDeR\",\"text-orange-clicked\":\"button_text-orange-clicked__CTqCY\",\"text-blue\":\"button_text-blue__1slS0\",\"text-blue-clicked\":\"button_text-blue-clicked__2xu1b\",\"text-aqua\":\"button_text-aqua__1r38_\",\"text-aqua-clicked\":\"button_text-aqua-clicked__26Xqh\",\"text-link\":\"button_text-link__qDcQl\",\"text-link-clicked\":\"button_text-link-clicked__u7q8o\",\"icon-left\":\"button_icon-left__2byGw\",\"icon-right\":\"button_icon-right__d52_9\"};","// import packages\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// import icon components from react-icons npm\nimport { FiArrowLeft } from \"react-icons/fi\";\nimport { FiArrowRight } from \"react-icons/fi\";\n\n// import style module\nimport styles from \"./button.module.scss\";\n\n/**\n * A simple React card component\n * @name Button\n * @returns {} returns a simple button component with various prop options to change it's styling\n */\nexport default function Button(props) {\n  const [clicked, setClick] = useState(\"\");\n  return (\n    <button\n      className={`\n        button \n        ${styles[props.version + clicked]}\n        ${styles[props.size]}\n  `}\n      onClick={() => {\n        setClick(\"-clicked\");\n      }}\n      size={props.size}\n    >\n      <p>\n        <span className={`${styles[\"icon-left\"]}`}>\n          {props.leftIcon ? <FiArrowLeft /> : \"\"}\n        </span>\n        <span className=\"button-content\">{props.content}</span>\n        <span className={`${styles[\"icon-right\"]}`}>\n          {props.rightIcon ? <FiArrowRight /> : \"\"}\n        </span>\n      </p>\n    </button>\n  );\n}\n\nButton.propTypes = {\n  /**\n   * The content for the button\n   */\n  content: PropTypes.string,\n  /**\n   * The version of a button ie primary, secondary, text, etc.\n   * Possible combinations: primary, primary-disabled, secondary, secondary-disabled, text, text-disabled, text-yellow, text-orange, text-blue, text-aqua\n   */\n  version: PropTypes.string,\n  /**\n   * The size for a button: \"big\" or \"small\"\n   */\n  size: PropTypes.string,\n  /**\n   * Includes an icon to the left of the content\n   */\n  leftIcon: PropTypes.bool,\n  /**\n   * Includes an icon to the right of the content\n   */\n  rightIcon: PropTypes.bool,\n};\n\nButton.defaultProps = {\n  content: \"Content\",\n};\n","import React from \"react\";\n\nimport Button from \"../components/Button/index\";\n\nexport default function buttons() {\n  return (\n    <section\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n        textAlign: \"center\",\n        marginTop: \"3rem\",\n      }}\n    >\n      <div>\n        <h3>Primary</h3>\n        <Button content=\"Primary\" version=\"primary\" size=\"small\" />\n        <Button content=\"primary big\" version=\"primary\" size=\"big\" />\n        <Button content=\"Clicked\" version=\"primary-clicked\" />\n        <Button content=\"Disabled\" version=\"primary-disabled\" />\n        <Button content=\"Danger\" version=\"danger\" />\n        <Button content=\"Danger Big\" version=\"danger\" size=\"big\" />\n      </div>\n      <div>\n        <h3>Secondary</h3>\n        <Button version=\"secondary\" size=\"small\" />\n        <Button content=\"secondary big\" version=\"secondary\" size=\"big\" />\n        <Button content=\"Clicked\" version=\"secondary-clicked\" />\n        <Button content=\"Disabled\" version=\"secondary-disabled\" />\n      </div>\n      <div>\n        <h3>Text Default</h3>\n        <div>\n          <Button content=\"Text\" version=\"text\" size=\"small\" />\n          <Button content=\"Text Big\" version=\"text\" size=\"big\" />\n          <Button content=\"Clicked\" version=\"text-clicked\" size=\"small\" />\n          <Button content=\"Disabled\" version=\"text-disabled\" size=\"small\" />\n        </div>\n        <h3>Text Yellow</h3>\n        <div>\n          <Button content=\"Text\" version=\"text-yellow\" size=\"small\" />\n          <Button content=\"Text Big\" version=\"text-yellow\" size=\"big\" />\n          <Button\n            content=\"Clicked\"\n            version=\"text-yellow-clicked\"\n            size=\"small\"\n          />\n          <Button content=\"Disabled\" version=\"text-disabled\" size=\"small\" />\n        </div>\n        <h3>Text Orange</h3>\n        <div>\n          <Button content=\"Text\" version=\"text-orange\" size=\"small\" />\n          <Button content=\"Text Big\" version=\"text-orange\" size=\"big\" />\n          <Button\n            content=\"Clicked\"\n            version=\"text-orange-clicked\"\n            size=\"small\"\n          />\n          <Button content=\"Disabled\" version=\"text-disabled\" size=\"small\" />\n        </div>\n        <h3>Text Blue</h3>\n        <div>\n          <Button content=\"Text\" version=\"text-blue\" size=\"small\" />\n          <Button content=\"Text Big\" version=\"text-blue\" size=\"big\" />\n          <Button content=\"Clicked\" version=\"text-blue-clicked\" size=\"small\" />\n          <Button content=\"Disabled\" version=\"text-disabled\" size=\"small\" />\n        </div>\n        <h3>Text Aqua</h3>\n        <div>\n          <Button content=\"Text\" version=\"text-aqua\" size=\"small\" />\n          <Button content=\"Text Big\" version=\"text-aqua\" size=\"big\" />\n          <Button content=\"Clicked\" version=\"text-aqua-clicked\" size=\"small\" />\n          <Button content=\"Disabled\" version=\"text-disabled\" size=\"small\" />\n        </div>\n      </div>\n      <div>\n        <h3>Text with Icons</h3>\n        <Button content=\"Text Left Icon\" leftIcon version=\"text\" size=\"small\" />\n        <Button\n          content=\"Clicked\"\n          leftIcon\n          version=\"text-clicked\"\n          size=\"small\"\n        />\n        <Button content=\"Text Left Icon\" leftIcon version=\"text\" size=\"big\" />\n        <Button content=\"Clicked\" leftIcon version=\"text-clicked\" size=\"big\" />\n        <Button\n          content=\"Text Right Icon\"\n          rightIcon\n          version=\"text\"\n          size=\"small\"\n        />\n        <Button\n          content=\"Clicked\"\n          rightIcon\n          version=\"text-clicked\"\n          size=\"small\"\n        />\n        <Button content=\"Text Right Icon\" rightIcon version=\"text\" size=\"big\" />\n        <Button content=\"Clicked\" rightIcon version=\"text-clicked\" size=\"big\" />\n      </div>\n      <div>\n        <h3>Text with Link</h3>\n        <Button content=\"Text\" version=\"text-link\" size=\"small\" />\n        <Button content=\"Link Big\" version=\"text-link\" size=\"big\" />\n        <Button content=\"Clicked\" version=\"text-link-clicked\" size=\"small\" />\n      </div>\n    </section>\n  );\n}\n","// import packages\nimport React from \"react\";\n\n// import style\nimport \"./App.scss\";\n\n// import pages\nimport Buttons from \"../src/pages/buttons-light-mode\";\n\nfunction App() {\n  return (\n    <>\n      <Buttons />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}